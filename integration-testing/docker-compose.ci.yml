services:
  client:
    container_name: integration-client
    image: moodify-integration-client
    build:
      context: .
      dockerfile: ClientDockerfile
    depends_on:
      - analytics-service
      - song-service
      - analytics-db
      - song-db
      - rabbit-mq-moodify

  analytics-service:
    container_name: integration-analytics-service
    depends_on:
      analytics-db:
        condition: "service_healthy"
    image: judahlit/moodify_analytics_service:latest
    restart: unless-stopped
    environment:
      - APP_NAME=analytics-service
      - POSTGRES_DB=analytics
      - POSTGRES_HOST=integration-analytics-db
      - POSTGRES_PASSWORD=nosrep
      - POSTGRES_PORT=5432
      - POSTGRES_USER=person
      - RABBITMQ_CONNECTION_STRING=amqp://guest:guest@integration-rabbit-mq-moodify:5672/
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://integration-otel-collector:4318
    ports:
      - "8099:8080"
  analytics-db:
    container_name: integration-analytics-db
    restart: always
    image: postgres:alpine
    environment:
      - POSTGRES_PASSWORD=nosrep
      - POSTGRES_USER=person
      - POSTGRES_DB=analytics
    ports:
      - "5448:5432"
    expose:
      - 5432
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 1s
      timeout: 2s
      retries: 10
    volumes:
      - analytics-db-volume:/var/lib/analytics-db

  song-service:
    container_name: integration-song-service
    depends_on:
      song-db:
        condition: "service_healthy"
    image: judahlit/moodify_song_service:latest
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - SERVER_PORT=8080
      - MONGO_URI=mongodb://yippie:eippiy@integration-song-db:27017
      - MONGO_DATABASE=Song
      - RABBIT_HOST=integration-rabbit-mq-moodify
      - RABBIT_PORT=5672
      - RABBIT_USERNAME=guest
      - RABBIT_PASSWORD=guest
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://integration-otel-collector:4318
    ports:
      - "8098:8080"
  song-db:
    container_name: integration-song-db
    image: bitnami/mongodb:latest
    restart: unless-stopped
    environment:
      - MONGO_USERNAME=yippie
      - MONGO_PASSWORD=eippiy
      - MONGO_DATABASE=Song
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=yippieroot
      - MONGO_INITDB_DATABASE=Song
    ports:
      - "27080:27017"
    expose:
      - 27017
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet
      interval: 10s
      timeout: 15s
      retries: 3
      start_period: 20s
    volumes:
      - ./integration-testing/song-service-mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - song-db-volume:/var/lib/song-db

  rabbit-mq-moodify:
    container_name: integration-rabbit-mq-moodify
    restart: unless-stopped
    image: rabbitmq:management-alpine
    ports:
      - "5680:5672"
      - "15680:15672"
    expose:
      - 5672
      - 15672

  opentelemetry-collector:
    container_name: integration-otel-collector
    image: grafana/otel-lgtm:latest
    ports:
      - "4338:4318"

volumes:
  analytics-db-volume:
  song-db-volume:
